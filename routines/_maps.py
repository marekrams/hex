
class MapHex:

    def __init__(self, s2i, N):

        all_sites = sorted(ind for inds in s2i.values() for ind in inds)
        assert all_sites == list(range(N))

        assert min(site[0] for site in s2i) == min(site[1] for site in s2i) == 0
        Nx = max(site[0] for site in s2i) + 1
        Ny = max(site[1] for site in s2i) + 1
        assert all((x, y) in s2i for x in range(Nx) for y in range(Ny))

        self.dims = (Nx, Ny)
        self.s2i = s2i
        self.i2s = {ind: (site, loc) for site, inds in s2i.items() for loc, ind in enumerate(inds)}
        self.s2N = {site: len(inds) for site, inds in s2i.items()}

    def group_H(self, H, gen_op, gen_I):
        HH = {'local': [], 'nn': []}
        for inds, val in H.items():
            Hterm = {}
            for ind in inds:
                site, loc = self.i2s[ind]
                Nloc = self.s2N[site]
                Oloc = gen_op(loc, Nloc)
                if site in Hterm:
                    Hterm[site] = Oloc @ Hterm[site]
                else:
                    Hterm[site] = Oloc

            Hlist = [val]
            for site, op in sorted(Hterm.items()):
                Hlist.append(site)
                Hlist.append(op)
                II = gen_I(self.s2N[site])
                assert (op @ op - II).norm() < 1e-12, "op ** 2 should be I. "
            Hlist.append(tuple(inds))
            which = 'local' if len(Hterm) == 1 else 'nn'
            HH[which].append(Hlist)
        return HH


class MapHex127_r4(MapHex):

    def __init__(self):
        s2i = {(0, 0): (0, 1, 2, 3, 14),      (0, 1): (4, 5, 6, 7, 15),        (0, 2): (8, 9, 10, 11, 16),        (0, 3): (12, 13, 17),
               (1, 0): (18, 19, 20, 21, 33),  (1, 1): (22, 23, 24, 25, 34),    (1, 2): (26, 27, 28, 29, 35),      (1, 3): (30, 31, 32, 36),
               (2, 0): (37, 38, 39, 40, 52),  (2, 1): (41, 42, 43, 44, 53),    (2, 2): (45, 46, 47, 48, 54),      (2, 3): (49, 50, 51, 55),
               (3, 0): (56, 57, 58, 59, 71),  (3, 1): (60, 61, 62, 63, 72),    (3, 2): (64, 65, 66, 67, 73),      (3, 3): (68, 69, 70, 74),
               (4, 0): (75, 76, 77, 78, 90),  (4, 1): (79, 80, 81, 82, 91),    (4, 2): (83, 84, 85, 86, 92),      (4, 3): (87, 88, 89, 93),
               (5, 0): (94, 95, 96, 97, 109), (5, 1): (98, 99, 100, 101, 110), (5, 2): (102, 103, 104, 105, 111), (5, 3): (106, 107, 108, 112),
               (6, 0): (113, 114, 115),       (6, 1): (116, 117, 118, 119),    (6, 2): (120, 121, 122, 123),      (6, 3): (124, 125, 126)}

        super().__init__(s2i=s2i, N=127)


# class MapHex127_r3(MapHex):

#     def __init__(self):
#         s2i = {(0, 0): (0, 1, 14),    (0, 1): (2, 3),        (0, 2): (4, 5, 15),   (0, 3): (6, 7),          (0, 4): (8, 9, 16),   (0, 5): (10, 11),        (0, 6): (12, 13, 17),  (0, 7): (),
#                (1, 0): (18, 19),      (1, 1): (20, 21, 33),  (1, 2): (22, 23),     (1, 3): (24, 25, 34),    (1, 4): (26, 27),     (1, 5): (28, 29, 35),    (1, 6): (30, 31),      (1, 7): (32, 36),
#                (2, 0): (37, 38, 52),  (2, 1): (39, 40),      (2, 2): (41, 42, 53), (2, 3): (43, 44),        (2, 4): (45, 46, 54), (2, 5): (47, 48),        (2, 6): (49, 50, 55),  (2, 7): (51,),
#                (3, 0): (56, 57),      (3, 1): (58, 59, 71),  (3, 2): (60, 61),     (3, 3): (62, 63, 72),    (3, 4): (64, 65),     (3, 5): (66, 67, 73),    (3, 6): (68, 69),      (3, 7): (70, 74),
#                (4, 0): (75, 76, 90),  (4, 1): (77, 78),      (4, 2): (79, 80, 91), (4, 3): (81, 82),        (4, 4): (83, 84, 92), (4, 5): (85, 86),        (4, 6): (87, 88, 93),  (4, 7): (89,),
#                (5, 0): (94, 95),      (5, 1): (96, 97, 109), (5, 2): (98, 99),     (5, 3): (100, 101, 110), (5, 4): (102, 103),   (5, 5): (104, 105, 111), (5, 6): (106, 107),    (5, 7): (108, 112),
#                (6, 0): (113,),        (6, 1): (114, 115),    (6, 2): (116, 117),   (6, 3): (118, 119),      (6, 4): (120, 121),   (6, 5): (122, 123),      (6, 6): (124, 125),    (6, 7): (126,),
#                }
#         super().__init__(s2i=s2i, N=127)


class MapHex127_r3(MapHex):

    def __init__(self):
        s2i = {(0, 0): (0, 1, 2, 3, 14),        (0, 1): (4, 5, 15),   (0, 2): (6, 7),          (0, 3): (8, 9, 16),   (0, 4): (10, 11),        (0, 5): (12, 13, 17),
               (1, 0): (18, 19, 20, 21, 33),    (1, 1): (22, 23),     (1, 2): (24, 25, 34),    (1, 3): (26, 27),     (1, 4): (28, 29, 35),    (1, 5): (30, 31, 32, 36),
               (2, 0): (37, 38, 39, 40, 52),    (2, 1): (41, 42, 53), (2, 2): (43, 44),        (2, 3): (45, 46, 54), (2, 4): (47, 48),        (2, 5): (49, 50, 51, 55),
               (3, 0): (56, 57, 58, 59, 71),    (3, 1): (60, 61),     (3, 2): (62, 63, 72),    (3, 3): (64, 65),     (3, 4): (66, 67, 73),    (3, 5): (68, 69, 70, 74),
               (4, 0): (75, 76, 77, 78, 90),    (4, 1): (79, 80, 91), (4, 2): (81, 82),        (4, 3): (83, 84, 92), (4, 4): (85, 86),        (4, 5): (87, 88, 89, 93),
               (5, 0): (94, 95, 96, 97, 109),   (5, 1): (98, 99),     (5, 2): (100, 101, 110), (5, 3): (102, 103),   (5, 4): (104, 105, 111), (5, 5): (106, 107, 108, 112),
               (6, 0): (113, 114, 115),         (6, 1): (116, 117),   (6, 2): (118, 119),      (6, 3): (120, 121),   (6, 4): (122, 123),      (6, 5): (124, 125, 126,)
               }
        super().__init__(s2i=s2i, N=127)


class MapHex133_r3(MapHex):

    def __init__(self):
        s2i = {(0, 0): (0, 1, 2, 3, 15),      (0, 1): (4, 5, 16),      (0, 2): (6, 7),          (0, 3): (8, 9, 17),      (0, 4): (10, 11),        (0, 5): (12, 13, 14, 18),
               (1, 0): (19, 20, 21, 22, 34),  (1, 1): (23, 24),        (1, 2): (25, 26, 35),    (1, 3): (27, 28),        (1, 4): (29, 30, 36),    (1, 5): (31, 32, 33, 37),
               (2, 0): (38, 39, 40, 41, 53),  (2, 1): (42, 43, 54),    (2, 2): (44, 45),        (2, 3): (46, 47, 55),    (2, 4): (48, 49),        (2, 5): (50, 51, 52, 56),
               (3, 0): (57, 58, 59, 60, 72),  (3, 1): (61, 62),        (3, 2): (63, 64, 73),    (3, 3): (65, 66),        (3, 4): (67, 68, 74),    (3, 5): (69, 70, 71, 75),
               (4, 0): (76, 77, 78, 79, 91),  (4, 1): (80, 81, 92),    (4, 2): (82, 83),        (4, 3): (84, 85, 93),    (4, 4): (86, 87),        (4, 5): (88, 89, 90, 94),
               (5, 0): (95, 96, 97, 98, 110), (5, 1): (99, 100),       (5, 2): (101, 102, 111), (5, 3): (103, 104),      (5, 4): (105, 106, 112), (5, 5): (107, 108, 109, 113),
               (6, 0): (114, 115, 116, 129),  (6, 1): (117, 118, 130), (6, 2): (119, 120),      (6, 3): (121, 122, 131), (6, 4): (123, 124),      (6, 5): (125, 126, 127, 128, 132)
               }
        super().__init__(s2i=s2i, N=133)


class MapHex156_r3(MapHex):

    def __init__(self):
        s2i = {(0, 0): (0, 1, 2, 3, 16),          (0, 1): (4, 5),          (0, 2): (6, 7, 17),      (0, 3): (8, 9),          (0, 4): (10, 11, 18),    (0, 5): (12, 13, 14, 15, 19),
               (1, 0): (20, 21, 22, 23, 36),      (1, 1): (24, 25, 37),    (1, 2): (26, 27),        (1, 3): (28, 29, 38),    (1, 4): (30, 31),        (1, 5): (32, 33, 34, 35, 39),
               (2, 0): (40, 41, 42, 43, 56),      (2, 1): (44, 45),        (2, 2): (46, 47, 57),    (2, 3): (48, 49),        (2, 4): (50, 51, 58),    (2, 5): (52, 53, 54, 55, 59),
               (3, 0): (60, 61, 62, 63, 76),      (3, 1): (64, 65, 77),    (3, 2): (66, 67),        (3, 3): (68, 69, 78),    (3, 4): (70, 71),        (3, 5): (72, 73, 74, 75, 79),
               (4, 0): (80, 81, 82, 83, 96),      (4, 1): (84, 85),        (4, 2): (86, 87, 97),    (4, 3): (88, 89),        (4, 4): (90, 91, 98),    (4, 5): (92, 93, 94, 95, 99),
               (5, 0): (100, 101, 102, 103, 116), (5, 1): (104, 105, 117), (5, 2): (106, 107),      (5, 3): (108, 109, 118), (5, 4): (110, 111),      (5, 5): (112, 113, 114, 115, 119),
               (6, 0): (120, 121, 122, 123, 136), (6, 1): (124, 125),      (6, 2): (126, 127, 137), (6, 3): (128, 129),      (6, 4): (130, 131, 138), (6, 5): (132, 133, 134, 135, 139),
               (7, 0): (140, 141, 142, 143),      (7, 1): (144, 145),      (7, 2): (146, 147),      (7, 3): (148, 149),      (7, 4): (150, 151),      (7, 5): (152, 153, 154, 155)
               }
        super().__init__(s2i=s2i, N=156)